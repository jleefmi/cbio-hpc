##################################
## Chainlink Configuration File ##
##################################

[parameters General Settings]
Order = 10

    [[parameters Cloud Service Provider Configuration]]
    Description = Configure the Cloud Provider account options.
    Order = 10

        [[[parameter CloudProvider]]]
        Label = Cloud Provider
        ParameterType = Cloud.Provider
        DefaultValue = AWS

        [[[parameter Credentials]]]
        Description = The credentials for the cloud provider
        ParameterType = Cloud.Credentials

        [[[parameter Region]]]
        Label = Region
        Description = Deployment Location
        ParameterType = Cloud.Region


[parameters Cluster Software]
Order = 20

    [[parameters Software]]
    Description = "Specify the scheduling software, and base OS installed on all nodes."
    Order = 10

        [[[parameter ImageName]]]
        Label = Base OS
        ParameterType = Cloud.Image
        Config.OS = linux
        Config.Filter := regexp("FMI", Package, "i")
        DefaultValue = FMI.CENTOS7.R4

        [[[parameter CommonChefRepoVersion]]]
        Label = CommonChef
        DefaultValue = =undefined
        Description = "If set, use a custom common chef repo version."
        Hidden = true

        [[[parameter HomeExport]]]
        Required = true

        [[[parameter CompbioExport]]]
        Required = true

        [[[parameter HSQExport]]]
        Required = true

  [[[parameter Rpc_Slots]]]
        DefaultValue = 128
        Required = true

        [[[parameter CloudStorageEndpoint]]]
        Required = true

        [[[parameter HSQCloudStorageEndpoint]]]
        Required = true

        [[[parameter PipelineUserName]]]
        Required = true

        [[[parameter PipelineUserUid]]]
        Required = true

        [[[parameter PipelineUserGid]]]
        Required = true

        [[[parameter PipelineUserGroups]]]
        Required = true

  [[[parameter ChainlinkEnv]]]
  Required = true

  [[[parameter UgeProjectVersion]]]
  Required = true

  [[[parameter ChainlinkVersion]]]
  Required = true

        [[[parameter GridEngineVersion]]]
        Label = GridEngine version
        Description = "The version of Univa GridEngine to install"
        DefaultValue = 8.5.0

        [[[parameter GridEngineRoot]]]
        Label = GridEngine root
        Description = "The location of the GridEngine install"
        DefaultValue = /sched/ge/ge-8.5.0

    [[parameters Node Access]]
    Description = "Specify the credentials required for access to the node.  The Keypair Path specifies the path on local machines for cyclecloud CLI access."
    Order = 20

        [[[parameter awsKeypair]]]
        Label = AWS Keypair
        Description = The keypair to connect with
        ParameterType = AWS.Keypair
        DefaultValue = FMI Systems Team
        Conditions.Required := CloudProvider === "AWS"
        Conditions.Excluded := CloudProvider !== "AWS"

        [[[parameter keypairLocation]]]
        Label = Keypair Path
        Description = The path to the keypair
        DefaultValue = ~/.ssh/FMI-Systems-Team.pem
        Required = True

        [[[parameter Username]]]
        Label = Username
        Description = The username for the built-in local user on all nodes for direct ssh access.
        DefaultValue = cyclecloud
        Conditions.Required := (CloudProvider === "Azure" && startswith("cycle.image.win", ImageName))
        Conditions.Excluded := !(CloudProvider === "Azure" && startswith("cycle.image.win", ImageName))

        [[[parameter Password]]]
        Label = Password
        ParameterType = Password
        Description = The password for the built-in local user on all nodes for direct ssh access.
        Conditions.Required := (CloudProvider === "Azure" && startswith("cycle.image.win", ImageName))
        Conditions.Excluded := !(CloudProvider === "Azure" && startswith("cycle.image.win", ImageName))

[parameters Compute Backend]
Order = 30

    [[parameters Instance Types]]
    Description = "The cluster, in this case, has two roles: the scheduler master-node with shared filer and the execute hosts. Configure which instance types to use based on the requirements of your application."
    Order = 10

        [[[parameter MasterMachineType]]]
        Label = Master Type
        Description = The machine type for scheduler master and shared filer.
        ParameterType = Cloud.MachineType
            [[[[record Config.ProviderDefaults]]]]
            AWS = r4.large
            Azure = Standard_A4
            GCP = n1-standard-4

        [[[parameter MasterInstanceProfileArn]]]
        Label = Master IAM Role
        Description = The instance profile ARN for the master node
        DefaultValue = arn:aws:iam::852372144783:instance-profile/cyclecloud

        [[[parameter MasterRootDeviceSize]]]
        Description = The root disk size in GB for the Master (determines IOPS)
        DefaultValue = 100
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 50
        Config.MaxValue = 1000
        Config.IntegerOnly = true

        [[[parameter MasterSlotCount]]]
        DefaultValue = 0

        [[[parameter PersistentMachineType]]]
        Label = Persistent Exec Type
        Description = The machine type for the persistent execute nodes
        ParameterType = Cloud.MachineType
            [[[[record Config.ProviderDefaults]]]]
            AWS = r4.large
            Azure = Standard_A4
            GCP = n1-standard-4

        [[[parameter ExecuteMachineType]]]
        Label = Execute Type
        Description = The machine type for execute nodes
        ParameterType = Cloud.MachineType
            [[[[record Config.ProviderDefaults]]]]
            AWS = r4.large
            Azure = Standard_A4
            GCP = n1-standard-4

        [[[parameter ExecRootDeviceSize]]]
        Description = The root disk size in GB for the Execute Nodes(determines IOPS)
        DefaultValue = 20
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 10
        Config.MaxValue = 1000
        Config.IntegerOnly = true

        [[[parameter ExecRootDeviceType]]]
        DefaultValue = gp2

        [[[parameter ExecRootDeviceIops]]]
        DefaultValue = 300

        [[[parameter HighMemMachineType]]]
        Label = HighMemory Type
        Description = The machine type for high-memory execute nodes
        ParameterType = Cloud.MachineType
            [[[[record Config.ProviderDefaults]]]]
            AWS = r4.8xlarge
            Azure = Standard_A16
            GCP = n1-standard-16



        [[[parameter ExecuteInstanceProfileArn]]]
        Label = Execute IAM Role
        Description = The instance profile ARN for the execute nodes
        DefaultValue = arn:aws:iam::852372144783:instance-profile/cyclecloud


    [[parameters Auto-Scaling]]
    Description = "The cluster can autoscale to the workload, adding execute hosts as jobs are queued. To enable this check the box below and choose the initial and maximum core counts for the cluster"
    Order = 20

        [[[parameter Autoscale]]]
        Label = Autoscale
        DefaultValue = true
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Start and stop execute instances automatically

        [[[parameter InitialPersistentCount]]]
        Label = Persistent Nodes
        Description = The number of persistent cores to launch on startup
        DefaultValue = 1
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 0
        Config.MaxValue = 200
        Config.IntegerOnly = true

        [[[parameter MaxPersistentCount]]]
        # Set to the MaxValue above
        Label = Max Persistent Nodes
        Description = The number of persistent cores to launch on startup
        DefaultValue = 20
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 0
        Config.MaxValue = 200
        Config.IntegerOnly = true
        Hidden = true

        [[[parameter InitialExecuteCoreCount]]]
        Label = Init Exec Cores
        Description = The number of execute cores to launch on startup
        DefaultValue = 0
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 0
        Config.MaxValue = 10000
        Config.IntegerOnly = true

        [[[parameter MaxExecuteCoreCount]]]
        Label = Max Exec Cores
        Description = The max number of execute cores to start
        DefaultValue = 9
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 0
        Config.MaxValue = 10000
        Config.IntegerOnly = true

        [[[parameter MaxHighMemCount]]]
        # Set to the MaxValue above
        Label = Max HighMem Nodes
        Description = The maximum number of allowed high memory instances
        DefaultValue = 20
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 0
        Config.MaxValue = 200
        Config.IntegerOnly = true
        Hidden = false


    [[parameters AWS Spot Market]]
    Description = "To use spot instances check the box and enter a bid price below, otherwise on-demand instances will be used"
    Conditions.Excluded := CloudProvider !== "AWS"
    Order = 30

        [[[parameter awsUseSpot]]]
        Label = Use Spot Instances
        DefaultValue = false
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Use spot instances for execute hosts

        [[[parameter awsBidPricePerCore]]]
        Label = BidPrice Per vCPU
        DefaultValue = 0.10
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 0
        Config.MaxValue = 5.0
        Description = How much to pay for execute vCPUs
        Conditions.Excluded := awsUseSpot isnt true

        [[[parameter awsHighMemBidPrice]]]
        Label = HighMem BidPrice
        DefaultValue = 2.0
        Config.Plugin = pico.form.NumberTextBox
        Config.MinValue = 0
        Config.MaxValue = 10.0
        Description = How much to bid for 1 HighMem instance
        Conditions.Excluded := awsUseSpot isnt true


    [[parameters GCP Preemptible Instances]]
    Description = "To use premptible instances check the box, otherwise regular instances will be used"
    Conditions.Excluded := CloudProvider !== "GCP"
    Order = 40

        [[[parameter Preemptible]]]
        Label = Use Preemptible Instances
        DefaultValue = false
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Use preemptible instances for execute hosts

[parameters Networking]
Order = 40

    [[parameters General]]
    Order = 10

        [[[parameter ReturnProxy]]]
        Label = Return Proxy
        DefaultValue = false
        Widget.Plugin = pico.form.BooleanCheckBox
        Widget.Label = Allow cloud instances to report back their state


    [[parameters AWS]]
    Order = 20
    Conditions.Excluded := CloudProvider !== "AWS"
    Description = "Optional use of VPC components. Without specifying a subnet or security group the hosts will be started in the default region, VPC and security group."

        [[[parameter awsMasterSubnetId]]]
        Label = Master Subnet
        Description = The subnet ID to use when in a VPC environment
        DefaultValue = subnet-e3e781aa
        ParameterType = AWS.Subnet

        [[[parameter awsMasterSecurityGroups]]]
        Label = Security Group(s)
        Description = "The security group ID(s) to use when in a VPC environment. Can be comma-separated list for multiple security groups. eg: sg-a0000001, sg-a0000002."
        DefaultValue := { "sg-948b34eb" }
        ParameterType = AWS.SecurityGroupList

        [[[parameter awsExecuteSubnetId]]]
        Label = Exec Subnet
        Description = The subnet ID to use when in a VPC environment
        ParameterType = StringList
        Autoselect = True

        [[[parameter awsExecuteSecurityGroups]]]
        Label = Security Group(s)
        Description = "The security group ID(s) to use when in a VPC environment. Can be comma-separated list for multiple security groups. eg: sg-a0000001, sg-a0000002."
        DefaultValue := { "sg-948b34eb" }
        ParameterType = AWS.SecurityGroupList


    [[parameters GCP Network]]
    Order = 30
    Conditions.Excluded := CloudProvider !== "GCP"
    Description = "Apply Instance Tags"

        [[[parameter gcpTags]]]
        Label = Tags
        Description = GCP Instance Tags
        ParameterType = StringList

    [[parameters Azure Virtual Network Configuration]]
    Order = 40
    Conditions.Excluded := CloudProvider !== "Azure"

        [[[parameter azureMasterSubnetId]]]
        Label = Master Subnet
        Description = Subnet Resource Path (ResourceGroup/VirtualNetwork/Subnet)
        Conditions.Required := CloudProvider === "Azure"
        Conditions.Excluded := CloudProvider !== "Azure"
        ParameterType = Azure.Subnet

        [[[parameter azureExecuteSubnetId]]]
        Label = Execute Subnet
        Description = Subnet Resource Path (ResourceGroup/VirtualNetwork/Subnet)
        Conditions.Required := CloudProvider === "Azure"
        Conditions.Excluded := CloudProvider !== "Azure"
        ParameterType = Azure.Subnet

[cluster Chainlink]
FormLayout = selectionpanel
Category = FMI
IconUrl = static/fmi_icon/fmi_icon.png

# Enable/disable autoscaling
# The scheduler load will determine the number of execute machines that are started, machines will terminate themselves if they are idle
# and approaching a billing cycle.
Autoscale = $Autoscale

    # defines default values used for all nodes. This is inherited automatically by all nodes.
    # You can create other nodes like this by adding Abstract = true to them and adding
    # Extends = foo to the nodes that should inherit the definitions from foo.
    [[node defaults]]
    Credentials = $Credentials

    ImageName = $ImageName
    AwaitInstallation = true
    SubnetId = ${IfThenElse(CloudProvider==="Azure", azureExecuteSubnetId, awsExecuteSubnetId)}
    Region = $Region

    CommonChefRepoVersion = $CommonChefRepoVersion

    # EC2
    KeyPair = $awsKeypair
    KeyPairLocation = $keypairLocation
    SecurityGroups = $awsExecuteSecurityGroups

    # Azure
    Username = $Username
    Password = $Password

    # GCP
    TagList = $gcpTags

        [[[configuration]]]
        # You can specify Chef attributes using dot notation if needed. For example, you
        # can use it to change the default CycleServer admin password (defaults to cluster name):
        cyclecloud.cluster.user.name = cluster.user
        # cyclecloud.cluster.user.password = abc;123
        cyclecloud.cluster.user.uid = 55555
        cyclecloud.cluster.user.gid = 55555
        fmi.sysctl.rpc_slots = $Rpc_Slots

        # Simulate DNS for now
#       cyclecloud.hosts.standalone_dns.enabled = true
#       cyclecloud.hosts.standalone_dns.suffix=corp.local
        cyclecloud.hosts.simple_vpc_dns.enabled = true
        cyclecloud.hosts.simple_vpc_dns.suffix=corp.local

        # NTP Config
        cyclecloud.ntp.servers = ntp.corp.local, ntp01.corp.local, ntp02.corp.local

        # No need for fail2ban in vpc
        cyclecloud.fail2ban.enabled = false

        # Allow meta-data access for normal users
        cyclecloud.node.prevent_metadata_access = false

        # Use Univa Grid Engine
        gridengine.make = ge
        gridengine.version = $GridEngineVersion
        gridengine.root = $GridEngineRoot

        [[[configuration fmi.users.pipeline_user]]]
        username = $PipelineUserName
        uid = $PipelineUserUid
        gid = $PipelineUserGid
        home = /home/$PipelineUserName
        groups = $PipelineUserGroups
        shell = /bin/bash
        domain = corp


        [[[configuration cyclecloud.mounts.compbio]]]
        type = nfs
        mountpoint = /compbio
        export_path = $CompbioExport
        address = $CloudStorageEndpoint
        options = nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 
        owner = root
        group = compbio
        permissions = "0775"

        [[[configuration cyclecloud.mounts.home]]]
        type = nfs
        mountpoint = /home
        export_path = $HomeExport
        address = $CloudStorageEndpoint
      	options = nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 
      	owner = root
      	group = compbio
      	permissions = "0755"

        [[[configuration cyclecloud.mounts.hsq]]]
        type = nfs
        mountpoint = /hsq
        export_path = $HSQExport
        address = $HSQCloudStorageEndpoint
        options = nfsvers=3,tcp,hard,timeo=6000,retrans=2,rsize=524288,wsize=524288
        owner = root
        group = compbio
        permissions = "0775"

        [[[cluster-init uge_default]]]
        Project=uge
        Spec=default
        Version=$UgeProjectVersion

        [[[cluster-init default]]]
      	Project=Chainlink
      	Spec=default
      	Version=$ChainlinkVersion

      	[[[cluster-init env]]]
      	Project=Chainlink
      	Spec=$ChainlinkEnv
      	Version=$ChainlinkVersion


    [[node master]]
    MachineType = $MasterMachineType
    IsReturnProxy = $ReturnProxy
    AWS.InstanceProfileArn = $MasterInstanceProfileArn
    AWS.RootDeviceSize=$MasterRootDeviceSize

    SubnetId = ${IfThenElse(CloudProvider==="Azure", azureMasterSubnetId, awsMasterSubnetId)}
    SecurityGroups = $awsMasterSecurityGroups

        [[[configuration]]]
        # This is the Chef runlist to use for the node, to customize this add customized recipes and/or roles
        run_list = recipe[createusers::move_localuser_home], recipe[cyclecloud], role[chainlink_master_role]

        gridengine.slots = $MasterSlotCount

        # cycle_server.admin.pass=123456

        [[[cluster-init master]]]
        Project=Chainlink
        Spec=master
        Version=$ChainlinkVersion

        # Configure Azure external input endpoints (for example SSH)
        [[[input-endpoint SSH]]]
        PrivatePort = 22
        PublicPort = 22

        [[[input-endpoint ganglia]]]
        PrivatePort = 8652
        PublicPort = 8652


    [[nodearray execute]]
    MachineType = $ExecuteMachineType
    AWS.InstanceProfileArn = $ExecuteInstanceProfileArn
    
    # EBS Volume Settings
    AWS.RootDeviceSize=$ExecRootDeviceSize
    AWS.RootDeviceType=$ExecRootDeviceType
    AWS.RootDeviceIops=$ExecRootDeviceIops

    # The initial number of cores of this type to start when the cluster starts
    InitialCoreCount= $InitialExecuteCoreCount

    # The maximum number of cores to start when the cluster is configured for autoscaling
    MaxCoreCount = $MaxExecuteCoreCount

    # AWS Spot Market bid prices - uncomment and enter the bid price for the nodes to provision
    BidPricePerCore = ${ifThenElse(awsUseSpot == true, awsBidPricePerCore, undefined)}

    # Use GCP Premptible Instances?
    Preemptible = ${ifThenElse(Preemptible == true, Preemptible, undefined)}

        [[[configuration]]]
        run_list = recipe[createusers::move_localuser_home], recipe[cyclecloud], role[chainlink_execute_role]


        [[[cluster-init execute]]]
        Project=Chainlink
        Spec=execute
        Version=$ChainlinkVersion

        [[[input-endpoint SSH]]]
        PrivatePort = 22
        PublicPort = 55100

    [[nodearray persistent]]
    Extends = execute
    MachineType = $PersistentMachineType

    # The initial number of instances of this type to start when the cluster starts
    InitialCount = $InitialPersistentCount
    InitialCoreCount = =undefined

    # The maximum number of cores to start when the cluster is configured for autoscaling
    MaxCount = $MaxPersistentCount
    MaxCoreCount = =undefined

    # Disable spot/preemptible for persistent instances
    BidPricePerCore = =undefined
    Preemptible = =undefined

        [[[configuration]]]
        gridengine.slot_type = execute
        cyclecloud.cluster.autoscale.stop_enabled = false

        [[[input-endpoint SSH]]]
        PrivatePort = 22
        PublicPort = 59100

    [[nodearray highmem]]
    Extends = execute
    MachineType = $HighMemMachineType

    InitialCount = =undefined
    InitialCoreCount = =undefined

    # The maximum number of instances to start when the cluster is configured for autoscaling
    MaxCount = $MaxHighMemCount


    # AWS Spot Market bid prices - uncomment and enter the bid price for the nodes to provision
    BidPrice = ${ifThenElse(awsUseSpot == true, awsHighMemBidPrice, undefined)}
    BidPricePerCore = =undefined
   
	CoreCount = 16

        [[[configuration]]]
        gridengine.slot_type = highmem
        gridengine.slots = 16

        [[[input-endpoint SSH]]]
        PrivatePort = 22
        PublicPort = 61000
